{
  "address": "0xD57930F312cEE154Fe98B851713A2F972Bf5b8ED",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x76816763e78eb3eb79c68400cb9c8425198c1968a71e2a0ee96d3e8ccf6f9def",
  "receipt": {
    "to": null,
    "from": "0x7eEBaF967d08FB8BBc1e9E236f87DaDD82B02189",
    "contractAddress": "0xD57930F312cEE154Fe98B851713A2F972Bf5b8ED",
    "transactionIndex": 25,
    "gasUsed": "1027881",
    "logsBloom": "0x
    "blockHash": "0x768055c575c5de947a4a00953cac20c72916a844fd10942190f918c5c5d796d7",
    "transactionHash": "0x76816763e78eb3eb79c68400cb9c8425198c1968a71e2a0ee96d3e8ccf6f9def",
    "logs": [],
    "blockNumber": 8308975,
    "cumulativeGasUsed": "5892939",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "257f904db8191fd2a5f9e4a35dc5fdac",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n//pragma\\npragma solidity ^0.8.7;\\n\\n//import\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Error handler\\nerror FundMe_NotOwner();\\n\\n//Interface,Libraries,Contracts\\n\\ncontract FundMe {\\n    //type declarations\\n    using PriceConverter for uint256;\\n    // event Funded(address indexed from, uint256);\\n\\n    //State Variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18; //50*1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    //functions\\n\\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // msg.value.getConversionRate(priceFeed);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner () public view returns(address){\\n        return i_owner;\\n\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address)\\n    {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface)\\n    {\\n        return s_priceFeed;\\n\\n    }\\n}\\n\",\"keccak256\":\"0xb68d61f524693cbf65ab32a27d23ed329f30c4b0f6e7b6f6a987e036aaf7d9d5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\n\\nlibrary PriceConverter {\\n    \\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x6be117915fc427d60bbc576a75c3e1019008185902472e8822a29e6bd59d5b61\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012b9380380620012b98339818101604052810190620000379190620000cd565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61113a6200017f600039600081816101e30152818161043201526105bc015261113a6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a92565b610199565b6040516100b49190610c88565b60405180910390f35b6100c56101e1565b005b3480156100d357600080fd5b506100dc610421565b6040516100e99190610c88565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610c12565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610c2d565b60405180910390f35b610150610480565b005b61015a6105ba565b005b34801561016857600080fd5b50610183600480360381019061017e9190610abf565b61085e565b6040516101909190610c12565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103115760006001828154811061028c5761028b610ff0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030990610f49565b915050610269565b50600067ffffffffffffffff81111561032d5761032c61101f565b5b60405190808252806020026020018201604052801561035b5781602001602082028036833780820191505090505b5060019080519060200190610371929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039890610bfd565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b505090508061041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590610c48565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a690919063ffffffff16565b1015610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f790610c68565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e9190610cbf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063f576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610679575b5050505050905060005b815181101561074d5760008282815181106106eb576106ea610ff0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074590610f49565b9150506106cd565b50600067ffffffffffffffff8111156107695761076861101f565b5b6040519080825280602002602001820160405280156107975781602001602082028036833780820191505090505b50600190805190602001906107ad929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d490610bfd565b60006040518083038185875af1925050503d8060008114610811576040519150601f19603f3d011682016040523d82523d6000602084013e610816565b606091505b505090508061085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190610c48565b60405180910390fd5b5050565b60006001828154811061087457610873610ff0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b2836108e2565b90506000670de0b6b3a764000085836108cb9190610e5d565b6108d59190610d15565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190610aec565b5050509150506402540be4008161097a9190610d46565b915050919050565b8280548282559060005260206000209081019282156109fb579160200282015b828111156109fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a2565b5b509050610a089190610a0c565b5090565b5b80821115610a25576000816000905550600101610a0d565b5090565b600081359050610a38816110a8565b92915050565b600081519050610a4d816110bf565b92915050565b600081359050610a62816110d6565b92915050565b600081519050610a77816110d6565b92915050565b600081519050610a8c816110ed565b92915050565b600060208284031215610aa857610aa761104e565b5b6000610ab684828501610a29565b91505092915050565b600060208284031215610ad557610ad461104e565b5b6000610ae384828501610a53565b91505092915050565b600080600080600060a08688031215610b0857610b0761104e565b5b6000610b1688828901610a7d565b9550506020610b2788828901610a3e565b9450506040610b3888828901610a68565b9350506060610b4988828901610a68565b9250506080610b5a88828901610a7d565b9150509295509295909350565b610b7081610eb7565b82525050565b610b7f81610f13565b82525050565b6000610b92600b83610cae565b9150610b9d82611053565b602082019050919050565b6000610bb5601b83610cae565b9150610bc08261107c565b602082019050919050565b6000610bd8600083610ca3565b9150610be3826110a5565b600082019050919050565b610bf781610ef3565b82525050565b6000610c0882610bcb565b9150819050919050565b6000602082019050610c276000830184610b67565b92915050565b6000602082019050610c426000830184610b76565b92915050565b60006020820190508181036000830152610c6181610b85565b9050919050565b60006020820190508181036000830152610c8181610ba8565b9050919050565b6000602082019050610c9d6000830184610bee565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cca82610ef3565b9150610cd583610ef3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0a57610d09610f92565b5b828201905092915050565b6000610d2082610ef3565b9150610d2b83610ef3565b925082610d3b57610d3a610fc1565b5b828204905092915050565b6000610d5182610ec9565b9150610d5c83610ec9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9b57610d9a610f92565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd857610dd7610f92565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1557610e14610f92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5257610e51610f92565b5b828202905092915050565b6000610e6882610ef3565b9150610e7383610ef3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eac57610eab610f92565b5b828202905092915050565b6000610ec282610ed3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f1e82610f25565b9050919050565b6000610f3082610f37565b9050919050565b6000610f4282610ed3565b9050919050565b6000610f5482610ef3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f8757610f86610f92565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110b181610eb7565b81146110bc57600080fd5b50565b6110c881610ec9565b81146110d357600080fd5b50565b6110df81610ef3565b81146110ea57600080fd5b50565b6110f681610efd565b811461110157600080fd5b5056fea264697066735822122081761b35e5d9621dcf6d70dcc54ee9ce3c9cbad23b2d85c58831a93d9b7ec4a864736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a92565b610199565b6040516100b49190610c88565b60405180910390f35b6100c56101e1565b005b3480156100d357600080fd5b506100dc610421565b6040516100e99190610c88565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610c12565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610c2d565b60405180910390f35b610150610480565b005b61015a6105ba565b005b34801561016857600080fd5b50610183600480360381019061017e9190610abf565b61085e565b6040516101909190610c12565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103115760006001828154811061028c5761028b610ff0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030990610f49565b915050610269565b50600067ffffffffffffffff81111561032d5761032c61101f565b5b60405190808252806020026020018201604052801561035b5781602001602082028036833780820191505090505b5060019080519060200190610371929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039890610bfd565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b505090508061041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041590610c48565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a690919063ffffffff16565b1015610500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f790610c68565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e9190610cbf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063f576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610679575b5050505050905060005b815181101561074d5760008282815181106106eb576106ea610ff0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074590610f49565b9150506106cd565b50600067ffffffffffffffff8111156107695761076861101f565b5b6040519080825280602002602001820160405280156107975781602001602082028036833780820191505090505b50600190805190602001906107ad929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d490610bfd565b60006040518083038185875af1925050503d8060008114610811576040519150601f19603f3d011682016040523d82523d6000602084013e610816565b606091505b505090508061085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190610c48565b60405180910390fd5b5050565b60006001828154811061087457610873610ff0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b2836108e2565b90506000670de0b6b3a764000085836108cb9190610e5d565b6108d59190610d15565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190610aec565b5050509150506402540be4008161097a9190610d46565b915050919050565b8280548282559060005260206000209081019282156109fb579160200282015b828111156109fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a2565b5b509050610a089190610a0c565b5090565b5b80821115610a25576000816000905550600101610a0d565b5090565b600081359050610a38816110a8565b92915050565b600081519050610a4d816110bf565b92915050565b600081359050610a62816110d6565b92915050565b600081519050610a77816110d6565b92915050565b600081519050610a8c816110ed565b92915050565b600060208284031215610aa857610aa761104e565b5b6000610ab684828501610a29565b91505092915050565b600060208284031215610ad557610ad461104e565b5b6000610ae384828501610a53565b91505092915050565b600080600080600060a08688031215610b0857610b0761104e565b5b6000610b1688828901610a7d565b9550506020610b2788828901610a3e565b9450506040610b3888828901610a68565b9350506060610b4988828901610a68565b9250506080610b5a88828901610a7d565b9150509295509295909350565b610b7081610eb7565b82525050565b610b7f81610f13565b82525050565b6000610b92600b83610cae565b9150610b9d82611053565b602082019050919050565b6000610bb5601b83610cae565b9150610bc08261107c565b602082019050919050565b6000610bd8600083610ca3565b9150610be3826110a5565b600082019050919050565b610bf781610ef3565b82525050565b6000610c0882610bcb565b9150819050919050565b6000602082019050610c276000830184610b67565b92915050565b6000602082019050610c426000830184610b76565b92915050565b60006020820190508181036000830152610c6181610b85565b9050919050565b60006020820190508181036000830152610c8181610ba8565b9050919050565b6000602082019050610c9d6000830184610bee565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cca82610ef3565b9150610cd583610ef3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0a57610d09610f92565b5b828201905092915050565b6000610d2082610ef3565b9150610d2b83610ef3565b925082610d3b57610d3a610fc1565b5b828204905092915050565b6000610d5182610ec9565b9150610d5c83610ec9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9b57610d9a610f92565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd857610dd7610f92565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1557610e14610f92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5257610e51610f92565b5b828202905092915050565b6000610e6882610ef3565b9150610e7383610ef3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eac57610eab610f92565b5b828202905092915050565b6000610ec282610ed3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f1e82610f25565b9050919050565b6000610f3082610f37565b9050919050565b6000610f4282610ed3565b9050919050565b6000610f5482610ef3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f8757610f86610f92565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110b181610eb7565b81146110bc57600080fd5b50565b6110c881610ec9565b81146110d357600080fd5b50565b6110df81610ef3565b81146110ea57600080fd5b50565b6110f681610efd565b811461110157600080fd5b5056fea264697066735822122081761b35e5d9621dcf6d70dcc54ee9ce3c9cbad23b2d85c58831a93d9b7ec4a864736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}